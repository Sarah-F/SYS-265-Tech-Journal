Clone part:
$git clone https://github.com/Sarah-F/SYS-265-Tech-Journal
(enter Sarah-F in first prompt and password to github in second)
$ls
$cd SYS-265-Tech-Journal
$ls


Add, commit and push.
$echo "docker01 configuration" >> README.md
$ls
$git add .
$git status
$git config user.email sfornaldes@gmail.com
$git config user.name Sarah-F
$git commit -m "added a readme"
$git push
(enter Sarah-F in first prompt and password to github in second)


Delivearble 2: Git clone
$cat README.md
$rm README.md
$git checkout
$cat README.md


Git on Windows
open internet and type git-scm.com/download/win in search bar
download 64-bit git for windows set-up
go through set up wizard, keep defaults
select launch git bash then click finish


Clone your repo on mgmt01
in git repo
$cd Desktop/
$git clone https://github.com/Sarah-F/SYS-265-Tech-Journal
Click sign in with browser - select chrome
$cd SYS-265-Tech-Journal
$mkdir SYS265
$cd SYS265
$mkdir mgmt01
$cd mgmt01
$hostname
Deliverable 3:
$echo hostname >> README.md
$cat README.md
$git add .
$git status
$git commit -m "added a readme"
$git push


Deliverable 4:
$echo mgmt01-sarah >> README.md
$cat README.md
$nano README.me (delete hostname)
$git add .
$git status
$git commit -m "oops"
$git push


Deliverable 5: Git pull
Go back to PuTTY tab
$git status
$git pull
(enter Sarah-F in first prompt and password to github in second)


Part 2: Hardening SSH
PuTTY into web01
$sudo yum install git
$git clone https://github.com/Sarah-F/SYS-265-Tech-Journal
(enter Sarah-F in first prompt and password to github in second)
$cd SYS-265-Tech-Journal/SYS265
$pwd
$mkdir -p linux/{public-keys,centos7}
$cd linux/
$ls
$nano centos7/secure-ssh.sh 
  #secure-ssh.sh
  #author Sarah-F
  #creates a new ssh user using $1 parameter
  #adds a public key from the local repo or curled from the remote repo
  #removes roots ability to ssh in
  echo "ALL YOUR CODE GOES HERE"
$chmod +x centos7/secure-ssh.sh
error message
$cd centos7
$touch secure-ssh.sh (touch creates the file)
$ls
$chmod +x secure-ssh.sh
$cd ..
$cat centos7/secure-ssh.sh
$git push
(enter Sarah-F in first prompt and password to github in second)

$git add .
$git status
$git config user.email sfornaldes@gmail.com
$git config user.name Sarah-F
$git commit -m "did this work"
$git config --global push.default matching
$git config --global push.default simple
$git push

$git pull
$git push


RSA keypair
$cd ..
$ls
$cd public-keys
$ssh-keygen -t rsa -C "sys265-2" (-2 only bcuz of previous user error, remove when redoing)
$cp ~/.ssh/id_rsa.pub .
(Press enter for all prompts)
$git add .
$git status
$git commit -m "made key pair"
$git pull
$git push

Hardening Script
Go to docker01 PuTTy
$git pull

Create user
$nano rsa_user.bash
  #!/bin/bash
  useradd -m -d /home/sys265-2 -s /bin/bash sys265-2
  mkdir /home/sys265-2/.ssh
  cp SYS265/linux/public-keys/id_rsa.pub /home/sys265-2/.ssh/authorized_keys
  chmod 700 /home/sys265-2/.ssh
  chmod 600 /home/sys265-2/.ssh/authorized_keys
  chown -R sys265-2:sys265-2 /home/sys265-2/.ssh
$sudo bash rsa_user.bash

Deliverable 8.  Provide a screenshot, showing the passwordless login.
on web01 putty
$exit
$ssh sys265-2@docker01-sarah

Modify your secure-ssh.sh script to do the following:
Using a passed parameter for username such as ./secure-ssh.sh testuser12, create a passwordless user such that the user with the associated private key on web01 can login without password as shown in the following example:
Root should not be able to login (see the "PermitRootLogin setting in sshd_conf).  Note, docker01 is Ubuntu and this is already the case. For this lab, you get a pass on this.  Were this a CentOS server, you would need to fix that.
on web01
$exit (so back to web01,then cd to linux)
$cd SYS-265-Tech-Journal
$ls
$cd SYS265
$ls
$cd linux
$ls
$cd centos7
$nano secure-ssh.sh 
add under text thats already there
    echo -e "enter username"
    read user
    sudo useradd $user
    echo $user was created
    sudo mkdir /home/$user/.ssh
    sudo cp /home/sarah/SYS-265-Tech-Journal/SYS265/linux/public-keys/id_rsa.pub /home/$user/.ssh/authorized_keys (to find pathway for this exit nano and use pwd command)
    sudo chmod 700 /home/$user/.ssh
    sudo chmod 600 /home/$user/.ssh/authorized_keys
    sudo chown -R $user:user /home/$user/.ssh
    sudo printf' \n%s\n' 'PermitRootLogin no' >> /etc/ssh/sshd_config (printf is a command used to display a given string, it can also be used to look for certain things and replace them)
    sudo systemctl restart sshd
    echo permit root login disabled
%./secure-ssh.sh (./ comand to run script)
$git add .
$git status
$git commit -m "made key pair"
$git pull
$git push
$cat secure-ssh.sh

